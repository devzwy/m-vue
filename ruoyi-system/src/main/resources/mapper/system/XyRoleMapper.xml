<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.XyRoleMapper">
    
    <resultMap type="XyRole" id="XyRoleResult">
        <result property="xyRoleId"    column="xy_role_id"    />
        <result property="xyRoleName"    column="xy_role_name"    />
        <result property="xyRoleType"    column="xy_role_type"    />
        <result property="xyRoleLevel"    column="xy_role_level"    />
        <result property="xyRoleLevelZs"    column="xy_role_level_zs"    />
        <result property="xyAccount"    column="xy_account"    />
    </resultMap>

    <sql id="selectXyRoleVo">
        select xy_role_id, xy_role_name, xy_role_type, xy_role_level, xy_role_level_zs, xy_account from xy_role
    </sql>

    <select id="selectXyRoleList" parameterType="XyRole" resultMap="XyRoleResult">
        <include refid="selectXyRoleVo"/>
        <where>  
            <if test="xyRoleName != null  and xyRoleName != ''"> and xy_role_name like concat('%', #{xyRoleName}, '%')</if>
            <if test="xyRoleType != null  and xyRoleType != ''"> and xy_role_type = #{xyRoleType}</if>
            <if test="xyRoleLevel != null "> and xy_role_level = #{xyRoleLevel}</if>
            <if test="xyRoleLevelZs != null "> and xy_role_level_zs = #{xyRoleLevelZs}</if>
            <if test="xyAccount != null  and xyAccount != ''"> and xy_account like concat('%', #{xyAccount}, '%')</if>
        </where>
    </select>
    
    <select id="selectXyRoleById" parameterType="String" resultMap="XyRoleResult">
        <include refid="selectXyRoleVo"/>
        where xy_role_id = #{xyRoleId}
    </select>
        
    <insert id="insertXyRole" parameterType="XyRole">
        insert into xy_role
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="xyRoleId != null">xy_role_id,</if>
            <if test="xyRoleName != null">xy_role_name,</if>
            <if test="xyRoleType != null">xy_role_type,</if>
            <if test="xyRoleLevel != null">xy_role_level,</if>
            <if test="xyRoleLevelZs != null">xy_role_level_zs,</if>
            <if test="xyAccount != null">xy_account,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="xyRoleId != null">#{xyRoleId},</if>
            <if test="xyRoleName != null">#{xyRoleName},</if>
            <if test="xyRoleType != null">#{xyRoleType},</if>
            <if test="xyRoleLevel != null">#{xyRoleLevel},</if>
            <if test="xyRoleLevelZs != null">#{xyRoleLevelZs},</if>
            <if test="xyAccount != null">#{xyAccount},</if>
         </trim>
    </insert>

    <update id="updateXyRole" parameterType="XyRole">
        update xy_role
        <trim prefix="SET" suffixOverrides=",">
            <if test="xyRoleName != null">xy_role_name = #{xyRoleName},</if>
            <if test="xyRoleType != null">xy_role_type = #{xyRoleType},</if>
            <if test="xyRoleLevel != null">xy_role_level = #{xyRoleLevel},</if>
            <if test="xyRoleLevelZs != null">xy_role_level_zs = #{xyRoleLevelZs},</if>
            <if test="xyAccount != null">xy_account = #{xyAccount},</if>
        </trim>
        where xy_role_id = #{xyRoleId}
    </update>

    <delete id="deleteXyRoleById" parameterType="String">
        delete from xy_role where xy_role_id = #{xyRoleId}
    </delete>

    <delete id="deleteXyRoleByIds" parameterType="String">
        delete from xy_role where xy_role_id in 
        <foreach item="xyRoleId" collection="array" open="(" separator="," close=")">
            #{xyRoleId}
        </foreach>
    </delete>
    
</mapper>